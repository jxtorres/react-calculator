{"version":3,"sources":["component/Display.js","component/GameDisplay.js","component/Button.js","component/ButtonPanel.js","component/IosAlert.js","component/App.js","logic/gameCalculate.js","logic/isNumber.js","index.js"],"names":["Display","react_default","a","createElement","className","this","props","value","React","Component","GameDisplay","propTypes","PropTypes","string","Button","handleClick","_this","clickHandler","name","orange","wide","join","trim","onClick","ButtonPanel","buttonName","Button_Button","IosAlert","state","hidden","flag","setHidden4","setState","class","message","App","total","next","operation","isDisplayingError","clicks","mostRecentMessage","obj","seed","Math","floor","random","test","parseFloat","calculate","renderAlert","IosAlert_IosAlert","GameDisplay_GameDisplay","ButtonPanel_ButtonPanel","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.852abe99.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Display.css\";\n\nexport default class Display extends React.Component {\n  static propTypes = {\n    value: PropTypes.string,\n  };\n\n  render() {\n    return (\n      <div className=\"component-display\">\n        <div>{this.props.value}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Display from \"./Display.js\";\n\nimport \"./Display.css\";\nimport \"./GameDisplay.css\";\n\nexport default class GameDisplay extends Display {\n  static propTypes = {\n    value: PropTypes.string,\n  };\n\n  render() {\n    return (\n      <div className={this.props.value == \"0\" ? \"component-green-display\" : \"component-display\"}>\n        <div>{this.props.value}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Button.css\";\n\nexport default class Button extends React.Component {\n  static propTypes = {\n    name: PropTypes.string,\n    orange: PropTypes.bool,\n    wide: PropTypes.bool,\n    clickHandler: PropTypes.func,\n  };\n\n  handleClick = () => {\n    this.props.clickHandler(this.props.name);\n  };\n\n  render() {\n    const className = [\n      \"component-button\",\n      this.props.orange ? \"orange\" : \"\",\n      this.props.wide ? \"wide\" : \"\",\n    ];\n\n    return (\n      <div className={className.join(\" \").trim()}>\n        <button onClick={this.handleClick}>{this.props.name}</button>\n      </div>\n    );\n  }\n}\n","import Button from \"./Button\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./ButtonPanel.css\";\n\nexport default class ButtonPanel extends React.Component {\n  static propTypes = {\n    clickHandler: PropTypes.func,\n  };\n\n  handleClick = buttonName => {\n    this.props.clickHandler(buttonName);\n  };\n\n  render() {\n    return (\n      <div className=\"component-button-panel\">\n        <div>\n          <Button name=\"AC\" clickHandler={this.handleClick} />\n          <Button name=\"+/-\" clickHandler={this.handleClick} />\n          <Button name=\"%\" clickHandler={this.handleClick} />\n          <Button name=\"รท\" clickHandler={this.handleClick} orange />\n        </div>\n        <div>\n          <Button name=\"7\" clickHandler={this.handleClick} />\n          <Button name=\"8\" clickHandler={this.handleClick} />\n          <Button name=\"9\" clickHandler={this.handleClick} />\n          <Button name=\"x\" clickHandler={this.handleClick} orange />\n        </div>\n        <div>\n          <Button name=\"4\" clickHandler={this.handleClick} />\n          <Button name=\"5\" clickHandler={this.handleClick} />\n          <Button name=\"6\" clickHandler={this.handleClick} />\n          <Button name=\"-\" clickHandler={this.handleClick} orange />\n        </div>\n        <div>\n          <Button name=\"1\" clickHandler={this.handleClick} />\n          <Button name=\"2\" clickHandler={this.handleClick} />\n          <Button name=\"3\" clickHandler={this.handleClick} />\n          <Button name=\"+\" clickHandler={this.handleClick} orange />\n        </div>\n        <div>\n          <Button name=\"0\" clickHandler={this.handleClick} wide />\n          <Button name=\".\" clickHandler={this.handleClick} />\n          <Button name=\"=\" clickHandler={this.handleClick} orange />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Display from \"./Display\";\nimport GameDisplay from \"./GameDisplay\";\nimport ButtonPanel from \"./ButtonPanel\";\nimport calculate from \"../logic/gameCalculate\";\nimport \"./IosAlert.css\";\nimport PropTypes from \"prop-types\";\n\nexport default class IosAlert extends React.Component {\n    static propTypes = {\n        hidden: PropTypes.bool,\n        message: PropTypes.string,\n    };\n\n\n\n  state = {\n      hidden: false,\n  \n  };\n\n  flag = false;\n\n  handleClick = buttonName => {\n    \n  };\n\n  setHidden4 = () => {\n    this.state.hidden = true;\n    this.setState({});\n\n\n  };\n\n  render() {\n    if(this.props.hidden)\n        this.state.hidden = this.props.hidden;\n\n\n\n    if(this.state.hidden == false){\n        return (\n\n            <div class=\"alert\"> \n                <div class=\"alertBase\">\n                    <div class=\"inner\"> \n                        <div class=\"title\">{this.props.message}</div> \n                        <div class=\"text\">Try again, click AC.</div> \n                    </div> \n                    <div class=\"button\" onClick={this.setHidden4}>OK</div> \n                </div> \n            </div>\n\n        );\n    }\n    else {\n        //Clear this one time use flag in the state\n        this.state.hidden = false;\n\n        return null;\n    }\n  }\n}\n","import React from \"react\";\nimport Display from \"./Display\";\nimport GameDisplay from \"./GameDisplay\";\nimport ButtonPanel from \"./ButtonPanel\";\nimport calculate from \"../logic/gameCalculate\";\nimport \"./App.css\";\nimport IosAlert from \"./IosAlert\";\n\nexport default class App extends React.Component {\n  state = {\n    total: null,\n    next: null,\n    operation: null,\n    isDisplayingError: false,\n  };\n\n\n  handleClick = buttonName => {\n    this.state.clicks = this.state.clicks ? this.state.clicks + 1: 1;\n    if(buttonName == \"AC\"){\n      this.state.clicks = 0;\n      this.state.mostRecentMessage = \"\";\n    }\n    this.setState(calculate(this.state, buttonName));\n    //Calling setState will not actually modify the state or run the caclulcate method pointer\n    //State will be modified later in the render loop before render() is invoked.\n    //Render Loop will iterate at some time in near future.\n   \n  };\n\n  render() {\n    // Special Render State on a value of zero.\n    if(this.state.next == 0 && this.state.mostRecentMessage==\"\"){\n      this.state.isDisplayingError = true;\n      this.state.mostRecentMessage = \"Congrats on finishing in \" + this.state.clicks + \" clicks!\"\n    }\n    //Set Flags for Alert rendering\n    let renderAlert = this.state.isDisplayingError;\n\n    //Clear one-time use flags\n    this.state.isDisplayingError = false;\n   \n    \n    return (\n      <div className=\"component-app\">\n        \n        <IosAlert message={this.state.mostRecentMessage} hidden={(renderAlert == false) ? true : false} />\n        <GameDisplay value={this.state.next || this.state.total || \"0\"} />\n        <ButtonPanel clickHandler={this.handleClick} />\n      </div>\n    );\n  }\n}\n","import Big from \"big.js\";\n\nimport operate from \"./operate\";\nimport isNumber from \"./isNumber\";\n\n/**\n * Given a button name and a calculator data object, return an updated\n * calculator data object.\n *\n * Calculator data object contains:\n *   total:String      the running total\n *   next:String       the next number to be operated on with the total\n *   operation:String  +, -, etc.\n *   seed: Starting value of the round\n */\nexport default function calculate(obj, buttonName) {\n  if (buttonName === \"AC\") {\n    let seed = Math.floor(Math.random()*1000) % 300;\n    return {\n      total: seed,\n      next: seed,\n      operation: null,\n      seed: seed,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if(obj.total == \"0\" || obj.next == \"0\")\n        return {\n            next: obj.next,\n            total: obj.total,\n            seed: obj.seed,\n            operation: obj.operation\n          };\n    if (buttonName === \"0\" && obj.next === \"0\") {\n      return {};\n    }\n    // If there is an operation, update next\n    if (obj.operation) {\n      if (obj.next) {\n        return { next: obj.next + buttonName };\n      }\n      return { next: buttonName };\n    }\n    // If there is no operation, update next and clear the value\n    if (obj.next) {\n      const next = obj.next === \"0\" ? buttonName : obj.next + buttonName;\n\n\n      return {\n            next: \"\" + (  (parseFloat( obj.next) - parseFloat(buttonName) + parseFloat(obj.seed)) % parseFloat(obj.seed)   ),\n            total: obj.total,\n            seed: obj.seed,\n            operation: obj.operation\n          };\n    }\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  return {\n    next: obj.next,\n    total: obj.total,\n    seed: obj.seed,\n    operation: obj.operation\n  };\n\n  if (buttonName === \"%\") {\n    if (obj.operation && obj.next) {\n      const result = operate(obj.total, obj.next, obj.operation);\n      return {\n        total: Big(result)\n          .div(Big(\"100\"))\n          .toString(),\n        next: null,\n        operation: null,\n      };\n    }\n    if (obj.next) {\n      return {\n        next: Big(obj.next)\n          .div(Big(\"100\"))\n          .toString(),\n      };\n    }\n    return {};\n  }\n\n  if (buttonName === \".\") {\n    if (obj.next) {\n      // ignore a . if the next number already has one\n      if (obj.next.includes(\".\")) {\n        return {};\n      }\n      return { next: obj.next + \".\" };\n    }\n    return { next: \"0.\" };\n  }\n\n  if (buttonName === \"=\") {\n    if (obj.next && obj.operation) {\n      return {\n        total: operate(obj.total, obj.next, obj.operation),\n        next: null,\n        operation: null,\n      };\n    } else {\n      // '=' with no operation, nothing to do\n      return {};\n    }\n  }\n\n  if (buttonName === \"+/-\") {\n    if (obj.next) {\n      return { next: (-1 * parseFloat(obj.next)).toString() };\n    }\n    if (obj.total) {\n      return { total: (-1 * parseFloat(obj.total)).toString() };\n    }\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!obj.next && !obj.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation button and there is an existing operation\n  if (obj.operation) {\n    return {\n      total: operate(obj.total, obj.next, obj.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // no operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!obj.next) {\n    return { operation: buttonName };\n  }\n\n  // save the operation and shift 'next' into 'total'\n  return {\n    total: obj.next,\n    next: null,\n    operation: buttonName,\n  };\n}\n","export default function isNumber(item) {\n  return /[0-9]+/.test(item);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./component/App\";\nimport \"./index.css\";\nimport \"github-fork-ribbon-css/gh-fork-ribbon.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}